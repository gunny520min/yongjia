<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yongjia.dao.AppointmentMapper">
	<resultMap id="BaseResultMap" type="com.yongjia.model.Appointment">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 07 
			14:25:04 CST 2015. -->
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="member_id" property="memberId" jdbcType="BIGINT" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="car_type" property="carType" jdbcType="VARCHAR" />
		<result column="connect_phone" property="connectPhone"
			jdbcType="VARCHAR" />
		<result column="problem_desc" property="problemDesc" jdbcType="VARCHAR" />
		<result column="kilo" property="kilo" jdbcType="VARCHAR" />
		<result column="is_test_drive" property="isTestDrive" jdbcType="INTEGER" />
		<result column="appoint_time" property="appointTime" jdbcType="BIGINT" />
		<result column="arrive_time" property="arriveTime" jdbcType="BIGINT" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_at" property="createAt" jdbcType="BIGINT" />
		<result column="create_by" property="createBy" jdbcType="BIGINT" />
		<result column="update_at" property="updateAt" jdbcType="BIGINT" />
		<result column="update_by" property="updateBy" jdbcType="BIGINT" />
	</resultMap>

	<resultMap id="ResultMapWithBLOBs" type="com.yongjia.model.Appointment"
		extends="BaseResultMap">
		<result column="appoint_content" property="appointContent"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, member_id, type, car_type, connect_phone, problem_desc, kilo, is_test_drive,
		appoint_time,
		arrive_time, status, create_at, create_by, update_at, update_by
	</sql>
	<sql id="Blob_Column_List">
		appoint_content
	</sql>

	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from appointment
		where id = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByMemberId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from appointment
		where member_id = #{memberId,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 07 
			14:25:04 CST 2015. -->
		delete from appointment
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insert" parameterType="com.yongjia.model.Appointment"
		useGeneratedKeys="true" keyProperty="id">
		insert into appointment (type, car_type,
		connect_phone, problem_desc, kilo,
		is_test_drive, appoint_time, arrive_time,
		status, create_at, create_by,
		update_at, update_by, appoint_content
		)
		values (#{type,jdbcType=INTEGER},
		#{carType,jdbcType=VARCHAR},
		#{connectPhone,jdbcType=VARCHAR}, #{problemDesc,jdbcType=VARCHAR}, #{kilo,jdbcType=VARCHAR},
		#{isTestDrive,jdbcType=INTEGER}, #{appointTime,jdbcType=BIGINT},
		#{arriveTime,jdbcType=BIGINT},
		#{status,jdbcType=INTEGER}, #{createAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT},
		#{updateAt,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT},
		#{appointContent,jdbcType=LONGVARCHAR}
		)
	</insert>

	<insert id="insertSelective" parameterType="com.yongjia.model.Appointment"
		useGeneratedKeys="true" keyProperty="id">
		insert into appointment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="type != null">
				type,
			</if>
			<if test="carType != null">
				car_type,
			</if>
			<if test="connectPhone != null">
				connect_phone,
			</if>
			<if test="problemDesc != null">
				problem_desc,
			</if>
			<if test="kilo != null">
				kilo,
			</if>
			<if test="isTestDrive != null">
				is_test_drive,
			</if>
			<if test="appointTime != null">
				appoint_time,
			</if>
			<if test="arriveTime != null">
				arrive_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="createAt != null">
				create_at,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="updateAt != null">
				update_at,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="appointContent != null">
				appoint_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="carType != null">
				#{carType,jdbcType=VARCHAR},
			</if>
			<if test="connectPhone != null">
				#{connectPhone,jdbcType=VARCHAR},
			</if>
			<if test="problemDesc != null">
				#{problemDesc,jdbcType=VARCHAR},
			</if>
			<if test="kilo != null">
				#{kilo,jdbcType=VARCHAR},
			</if>
			<if test="isTestDrive != null">
				#{isTestDrive,jdbcType=INTEGER},
			</if>
			<if test="appointTime != null">
				#{appointTime,jdbcType=BIGINT},
			</if>
			<if test="arriveTime != null">
				#{arriveTime,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="createAt != null">
				#{createAt,jdbcType=BIGINT},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=BIGINT},
			</if>
			<if test="updateAt != null">
				#{updateAt,jdbcType=BIGINT},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=BIGINT},
			</if>
			<if test="appointContent != null">
				#{appointContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.yongjia.model.Appointment">
		update appointment
		<set>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="carType != null">
				car_type = #{carType,jdbcType=VARCHAR},
			</if>
			<if test="connectPhone != null">
				connect_phone = #{connectPhone,jdbcType=VARCHAR},
			</if>
			<if test="problemDesc != null">
				problem_desc = #{problemDesc,jdbcType=VARCHAR},
			</if>
			<if test="kilo != null">
				kilo = #{kilo,jdbcType=VARCHAR},
			</if>
			<if test="isTestDrive != null">
				is_test_drive = #{isTestDrive,jdbcType=INTEGER},
			</if>
			<if test="appointTime != null">
				appoint_time = #{appointTime,jdbcType=BIGINT},
			</if>
			<if test="arriveTime != null">
				arrive_time = #{arriveTime,jdbcType=BIGINT},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="createAt != null">
				create_at = #{createAt,jdbcType=BIGINT},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=BIGINT},
			</if>
			<if test="updateAt != null">
				update_at = #{updateAt,jdbcType=BIGINT},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=BIGINT},
			</if>
			<if test="appointContent != null">
				appoint_content = #{appointContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yongjia.model.Appointment">
		update appointment
		set type = #{type,jdbcType=INTEGER},
		car_type = #{carType,jdbcType=VARCHAR},
		connect_phone = #{connectPhone,jdbcType=VARCHAR},
		problem_desc = #{problemDesc,jdbcType=VARCHAR},
		kilo = #{kilo,jdbcType=VARCHAR},
		is_test_drive = #{isTestDrive,jdbcType=INTEGER},
		appoint_time = #{appointTime,jdbcType=BIGINT},
		arrive_time = #{arriveTime,jdbcType=BIGINT},
		status = #{status,jdbcType=INTEGER},
		create_at = #{createAt,jdbcType=BIGINT},
		create_by = #{createBy,jdbcType=BIGINT},
		update_at = #{updateAt,jdbcType=BIGINT},
		update_by = #{updateBy,jdbcType=BIGINT},
		appoint_content = #{appointContent,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.yongjia.model.Appointment">
		update appointment
		set type = #{type,jdbcType=INTEGER},
		car_type = #{carType,jdbcType=VARCHAR},
		connect_phone = #{connectPhone,jdbcType=VARCHAR},
		problem_desc = #{problemDesc,jdbcType=VARCHAR},
		kilo = #{kilo,jdbcType=VARCHAR},
		is_test_drive = #{isTestDrive,jdbcType=INTEGER},
		appoint_time = #{appointTime,jdbcType=BIGINT},
		arrive_time = #{arriveTime,jdbcType=BIGINT},
		status = #{status,jdbcType=INTEGER},
		create_at = #{createAt,jdbcType=BIGINT},
		create_by = #{createBy,jdbcType=BIGINT},
		update_at = #{updateAt,jdbcType=BIGINT},
		update_by = #{updateBy,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>